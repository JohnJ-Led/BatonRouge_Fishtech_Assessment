/*
SQL Final Version Statements used.
*/

CREATE TABLE BRTI
(
    INCIDENT_NUMBER VARCHAR(11) NOT NULL,
    CRASH_DATE VARCHAR(20),
    STREET_ADDRESS VARCHAR(100),
    CITY VARCHAR(50),
    STATE VARCHAR(2),
    ZIP_CODE INT,
    DISTRICT INT,
    ZONE VARCHAR(10),
    SUBZONE VARCHAR(10),
    TOTAL_VEHICLES INT,
    ROAD_CLASS VARCHAR(50),
    HIT_AND_RUN VARCHAR(5),
    TRAIN VARCHAR(5),
    FATALITY VARCHAR(5),
    INJURY VARCHAR(5),
    PEDESTRIAN VARCHAR(5),
    INTERSECTION VARCHAR(5),
    NEAREST_STREET VARCHAR(100),
    MANNER_OF_COLLISION VARCHAR(50),
    ROADWAY_SURFACE VARCHAR(50),
    ROADWAY_CONDITION VARCHAR(50),
    ROADWAY_DESIGN VARCHAR(50),
    ALIGNMENT VARCHAR(50),
    PRIMARY_FACTOR VARCHAR(50),
    SECONDARY_FACTOR VARCHAR(50),
    WEATHER VARCHAR(50),
    LOCATION_TYPE VARCHAR(50),
    ROADWAY_RELATION VARCHAR(50),
    ACCESS_CONTROL VARCHAR(50),
    LIGHTING VARCHAR(50),
    LONGITUDE INT,
    LATITUDE INT,
    GEOLOCATION VARCHAR(50),
    PRIMARY KEY (INCIDENT_NUMBER)
);

CREATE TABLE US_ZIP_CODES
(
    zip INT NOT NULL,
    type VARCHAR(10),
    decommissioned INT,
    primary_city VARCHAR(50),
    state VARCHAR(2),
    county VARCHAR(50),
    timezone VARCHAR(50),
    world_region VARCHAR(2),
    country VARCHAR(2),
    latitude INT,
    longitude INT,
    irs_estimated_population INT,
    PRIMARY KEY (zip)
);
-- Import Data set
LOAD DATA INFILE '/var/lib/mysql-files/brti.csv' INTO TABLE BRTI FIELDS TERMINATED BY ',' ENCLOSED BY '"' LINES TERMINATED BY '\n' IGNORE 1 ROWS
(INCIDENT_NUMBER, CRASH_DATE, STREET_ADDRESS, CITY, STATE, @zip, @district, ZONE, SUBZONE, TOTAL_VEHICLES, ROAD_CLASS, HIT_AND_RUN, TRAIN,FATALITY, INJURY, PEDESTRIAN, INTERSECTION, NEAREST_STREET, MANNER_OF_COLLISION,ROADWAY_SURFACE,
ROADWAY_CONDITION,ROADWAY_DESIGN,ALIGNMENT,PRIMARY_FACTOR,SECONDARY_FACTOR,WEATHER,LOCATION_TYPE,ROADWAY_RELATION,ACCESS_CONTROL,LIGHTING, @long, @lat, GEOLOCATION)
SET ZIP_CODE = NULLIF(@zip,''),
    DISTRICT = NULLIF(@district,''),
    LONGITUDE = NULLIF(@long,''),
    LATITUDE = NULLIF(@lat,'');

-- FINAL TABLE CREATION
CREATE TABLE BRTI_FINAL
SELECT INCIDENT_NUMBER,
    CRASH_DATE,
    STREET_ADDRESS,
    CASE WHEN zips.primary_city IS NULL THEN BRTI.CITY
    ELSE UPPER(zips.primary_city)
    END AS CITY,
    CASE WHEN BRTI.STATE = '' THEN zips.state
    ELSE BRTI.STATE
    END AS STATE,
    zip AS ZIP,
    TOTAL_VEHICLES,
    ROAD_CLASS,
    HIT_AND_RUN,
    TRAIN,
    FATALITY,
    INJURY,
    PEDESTRIAN,
    INTERSECTION,
    MANNER_OF_COLLISION,
    ROADWAY_SURFACE,
    ROADWAY_CONDITION,
    ROADWAY_DESIGN,
    ALIGNMENT,
    PRIMARY_FACTOR,
    SECONDARY_FACTOR,
    WEATHER,
    LOCATION_TYPE,
    ROADWAY_RELATION,
    ACCESS_CONTROL,
    LIGHTING,
    irs_estimated_population
FROM BRTI
LEFT JOIN (SELECT zip,
    primary_city,
    state,
    irs_estimated_population
FROM US_ZIP_CODES) AS zips ON ZIP_CODE = zip;

-- Total Frequency In Incident
SET @ThisValue = (SELECT COUNT(*) FROM BRTI_FINAL);

SELECT
CASE WHEN CITY = '' THEN 'UNKNOWN'
	 WHEN CITY IS NULL THEN 'UNKNOWN'
     WHEN CITY = 'قصر قدور' THEN 'UNKNOWN'
     WHEN CITY = 'DALLAS' THEN 'UNKNOWN'
     WHEN CITY = 'IRMO' THEN 'UNKNOWN'
ELSE CITY
END AS CITY,
COUNT(IF(HIT_AND_RUN = 'TRUE' ,1,NULL)) /COUNT(HIT_AND_RUN) *100 AS HnT,
COUNT(IF(TRAIN = 'TRUE',1,NULL)) /COUNT(TRAIN) AS TRAIN,
COUNT(IF(FATALITY = 'TRUE',1,NULL)) /COUNT(FATALITY) AS FATALITY,
COUNT(IF(INJURY = 'TRUE',1,NULL)) /COUNT(INJURY) AS INJURY,
COUNT(IF(PEDESTRIAN = 'TRUE',1,NULL)) /COUNT(PEDESTRIAN) AS PEDESTRIAN,
COUNT(IF(INTERSECTION = 'TRUE',1,NULL)) /COUNT(INTERSECTION) AS INTERSECTION,
COUNT(*) AS Total
FROM BRTI_FINAL
WHERE CITY NOT IN ('قصر قدور' ,'DALLAS','IRMO', 'UDENI-MAGAJI') #BAD VALUES REMOVING
GROUP BY CITY
UNION ALL
SELECT
'TOTAL_INCIDENTS' AS CITY,
COUNT(IF(HIT_AND_RUN = 'TRUE' ,1,NULL)) / @ThisValue AS HnT,
COUNT(IF(TRAIN = 'TRUE',1,NULL)) /@ThisValue AS TRAIN,
COUNT(IF(FATALITY = 'TRUE',1,NULL)) /@ThisValue AS FATALITY,
COUNT(IF(INJURY = 'TRUE',1,NULL)) /@ThisValue AS INJURY,
COUNT(IF(PEDESTRIAN = 'TRUE',1,NULL)) /@ThisValue AS PEDESTRIAN,
COUNT(IF(INTERSECTION = 'TRUE',1,NULL)) /@ThisValue AS INTERSECTION,
@ThisValue AS Total
FROM BRTI_FINAL
WHERE CITY NOT IN ('قصر قدور' ,'DALLAS','IRMO', 'UDENI-MAGAJI') #BAD VALUES REMOVING
ORDER BY Total DESC, CITY;

SELECT `BRTI_EXCEL`.`INCIDENT_NUMBER`,
    `BRTI_EXCEL`.`CRASH_DATE`,
    `BRTI_EXCEL`.`STREET_ADDRESS`,
    `BRTI_EXCEL`.`CITY`,
    `BRTI_EXCEL`.`STATE`,
    `BRTI_EXCEL`.`ZIP`,
    `BRTI_EXCEL`.`TOTAL_VEHICLES`,
    CASE WHEN `BRTI_EXCEL`.`ROAD_CLASS` = '' THEN 'UNKNOW'
    ELSE ROAD_CLASS END AS ROAD_CLASS,
    `BRTI_EXCEL`.`HIT_AND_RUN`,
    `BRTI_EXCEL`.`TRAIN`,
    `BRTI_EXCEL`.`FATALITY`,
    `BRTI_EXCEL`.`INJURY`,
    `BRTI_EXCEL`.`PEDESTRIAN`,
    `BRTI_EXCEL`.`INTERSECTION`,
    CASE WHEN `BRTI_EXCEL`.`MANNER_OF_COLLISION` = '' THEN 'UNKNOWN'
    ELSE MANNER_OF_COLLISION END AS MANNER_OF_COLLISION,
    CASE WHEN `BRTI_EXCEL`.`ROADWAY_SURFACE` = '' THEN 'UNKNOWN'
    ELSE ROADWAY_SURFACE END AS ROADWAY_SURFACE,
    CASE WHEN `BRTI_EXCEL`.`ROADWAY_CONDITION` = '' THEN 'UNKNOWN'
    ELSE ROADWAY_CONDITION END AS ROADWAY_CONDITION,
    CASE WHEN `BRTI_EXCEL`.`ROADWAY_DESIGN` = '' THEN 'UNKNOWN'
    ELSE ROADWAY_DESIGN END AS ROADWAY_DESIGN,
    CASE WHEN `BRTI_EXCEL`.`ALIGNMENT` = '' THEN 'UNKNOWN'
    ELSE ALIGNMENT END AS ALIGNMENT,
    CASE WHEN `BRTI_EXCEL`.`PRIMARY_FACTOR` = '' THEN 'UNKNOWN'
    ELSE PRIMARY_FACTOR END AS PRIMARY_FACTOR,
    CASE WHEN `BRTI_EXCEL`.`SECONDARY_FACTOR` = '' THEN 'UNKNOWN'
    ELSE  SECONDARY_FACTOR END AS SECONDARY_FACTOR,
    CASE WHEN `BRTI_EXCEL`.`WEATHER` = '' THEN 'UNKNOWN'
    ELSE  WEATHER END AS WEATHER,
    CASE WHEN `BRTI_EXCEL`.`LOCATION_TYPE` = '' THEN 'UNKNOWN'
    ELSE LOCATION_TYPE END AS LOCATION_TYPE,
    CASE WHEN `BRTI_EXCEL`.`ROADWAY_RELATION` = '' THEN 'UNKNOWN'
    ELSE ROADWAY_RELATION END AS ROADWAY_RELATION,
    CASE WHEN `BRTI_EXCEL`.`ACCESS_CONTROL` = '' THEN 'UNKNOWN'
    ELSE ACCESS_CONTROL END AS ACCESS_CONTROL,
    CASE WHEN `BRTI_EXCEL`.`LIGHTING` = '' THEN 'UNKNOWN'
    ELSE LIGHTING END AS LIGHTING,
    `BRTI_EXCEL`.`irs_estimated_population`
FROM `schoolDB`.`BRTI_EXCEL`;